import { EventEmitter } from '../utils';
import { BlockObject } from '../types/block-type';
export type UserCredentials = {
    userId: string;
    userToken: string;
};
export type Message = {
    id: string;
    conversationId: string;
    authorId: string | undefined;
    sentOn: Date;
    payload: BlockObject;
};
export type Events = {
    conversation: string | undefined;
    message: Message;
    messageSent: string;
    error: Error;
};
export type WebChatClient = {
    clientId: string | undefined;
    userId: string | undefined;
    conversationId: string | undefined;
    on: EventEmitter<Events>['on'];
    connect(creds?: UserCredentials): Promise<UserCredentials | undefined>;
    disconnect(): Promise<void>;
    sendMessage(message: string): Promise<void>;
    switchConversation(id: string): Promise<void>;
    conversationExists(id: string): Promise<boolean>;
    newConversation(): Promise<void>;
    listMessages(): Promise<Message[]>;
};
